[{"/Users/Seth/Sites/three-favorite-bands/src/App.js":"1","/Users/Seth/Sites/three-favorite-bands/src/index.js":"2"},{"size":1335,"mtime":1607921744845,"results":"3","hashOfConfig":"4"},{"size":214,"mtime":1607916905352,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"tshr6u",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"/Users/Seth/Sites/three-favorite-bands/src/App.js",["12"],"import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport axios from 'axios'\n\nconst App = () => {\n  const [bandOne, setBandOne] = useState()\n\n  function randomize(items) {\n    return items[Math.floor(Math.random() * items.length)]\n  }\n\n  const band = randomize(bandOne)\n\n  const displayBandOne = async () => {\n    try {\n      const response = await axios\n        .get(\n          'https://5faabf21b5c645001602b15f.mockapi.io/solelife-mock-api/users'\n        )\n        .then((response) => {\n          setBandOne(response.data)\n          console.log(bandOne)\n        })\n      return response\n    } catch (error) {\n      if (error.response) {\n        // When response status code is out of 2xx range\n        console.log(error.response.data)\n        console.log(error.response.status)\n      } else {\n        console.log(error.message)\n      }\n    }\n  }\n\n  return (\n    <div className=\"prose\">\n      <h1 className=\"center\">My three favorite bands are ...</h1>\n      <div className=\"grid grid-cols-3 gap-4 mb-10\">\n        <div className=\"center\">\n          <div>{band}</div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-row-3 gap-4\">\n        <button className=\"center\" onClick={displayBandOne}>\n          Band #1\n        </button>\n      </div>\n    </div>\n  )\n}\n\nApp.propTypes = {}\n\nexport default App\n","/Users/Seth/Sites/three-favorite-bands/src/index.js",[],["13","14"],{"ruleId":"15","severity":1,"message":"16","line":2,"column":8,"nodeType":"17","messageId":"18","endLine":2,"endColumn":17},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-global-assign","no-unsafe-negation"]